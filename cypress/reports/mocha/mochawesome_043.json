{
  "stats": {
    "suites": 0,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2020-04-24T10:27:06.957Z",
    "end": "2020-04-24T10:27:08.086Z",
    "duration": 1129,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "92529896-5931-43d7-b5af-d0321e39b50d",
      "title": "",
      "fullFile": "cypress\\integration\\MyProject\\Todo.spec.js",
      "file": "cypress\\integration\\MyProject\\Todo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ca47c553-ec2f-48e9-a518-dcb6e2d5aa1a",
          "title": "Dubugging todo items",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "adds a todo items",
              "fullTitle": "Dubugging todo items adds a todo items",
              "timedOut": null,
              "duration": 417,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://todomvc-app-for-testing.surge.sh/'); //debugger;\ncy.title().should('eq', 'TodoMVC');\ncy.get('.new-todo').type('sorry{enter}').type('Helloo{enter}').type('New{enter}');\ncy.get('.new-todo').then(function () {\n  cy.get('.new-todduo').type('Bye{enter}'); //  debugger\n  cy.get('.todo-list li:nth-child(1)').should('have.text', 'New').then(function ($Todo) {\n    debugger;\n  });\n  cy.get('.todo-list li').should('have.length', 8); // cy.get('.new-todo').type('Bye{enter}')\n  // debugger\n}); //debugger;\n//  cy.get('.todo-list li:nth-child(1)').should('have.text','New')\n//  cy.get('.todo-list li').should('have.length',8)\n//  cy.get('.new-todo').type('Bye{enter}')\n//  cy.get('label').debug()\n//.should('have.text','New')",
              "err": {
                "message": "TypeError: Failed to execute 'fetch' on 'Window': Failed to parse URL from https://localhost:undefined/eyes/batchEnd\n\nBecause this error occurred during a `after all` hook we are skipping all of the remaining tests.",
                "estack": "TypeError: Failed to execute 'fetch' on 'Window': Failed to parse URL from https://localhost:undefined/eyes/batchEnd\n\nBecause this error occurred during a `after all` hook we are skipping all of the remaining tests.\n    at send (https://serviceproviders.ca-test.com/__cypress/tests?p=cypress\\support\\index.js-193:2654:12)\n    at sendRequest (https://serviceproviders.ca-test.com/__cypress/tests?p=cypress\\support\\index.js-193:2696:12)\n    at https://serviceproviders.ca-test.com/__cypress/tests?p=cypress\\support\\index.js-193:2418:12\n    at doPoll (https://serviceproviders.ca-test.com/__cypress/tests?p=cypress\\support\\index.js-193:2668:12)\n    at Context.<anonymous> (https://serviceproviders.ca-test.com/__cypress/tests?p=cypress\\support\\index.js-193:2435:14)",
                "diff": null
              },
              "uuid": "7554f12b-eb0c-4fa1-84c2-ea0e357fc118",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7554f12b-eb0c-4fa1-84c2-ea0e357fc118"
          ],
          "pending": [],
          "skipped": [],
          "duration": 417,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "5.0.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": "true",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}